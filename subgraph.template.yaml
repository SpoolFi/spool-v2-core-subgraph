specVersion: 0.0.4
description: Spool V2 Core Subgraph
repository: 
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum/contract
    name: StrategyRegistry
    network: {{ network }}
    source:
      address: '{{ strategyRegistry }}'
      abi: StrategyRegistryContract
      startBlock: {{ startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/strategyRegistry.ts
      entities:
        - Token
        - AssetGroup
        - Strategy
      abis:
        - name: StrategyRegistryContract
          file: ./abis/StrategyRegistry.json
        - name: StrategyContract
          file: ./abis/IStrategy.json
      eventHandlers:
        - event: StrategyRegistered(indexed address)
          handler: handleStrategyRegistered
        - event: StrategyRemoved(indexed address)
          handler: handleStrategyRemoved
        - event: StrategyApyUpdated(indexed address,int256)
          handler: handleStrategyApyUpdated
        - event: StrategyDhw(indexed address,uint256,(uint256,uint256[],int256,uint256,uint256))
          handler: handleStrategyDhw
  - kind: ethereum/contract
    name: RiskManager
    network: {{ network }}
    source:
      address: '{{ riskManager }}'
      abi: RiskManagerContract
      startBlock: {{ startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/riskManager.ts
      entities:
        - Token
        - AssetGroup
        - Strategy
        - SmartVault
      abis:
        - name: RiskManagerContract
          file: ./abis/RiskManager.json
      eventHandlers:
        - event: RiskScoresUpdated(indexed address,address[],uint8[])
          handler: handleRiskScoresUpdated
        - event: AllocationProviderSet(indexed address,indexed address)
          handler: handleAllocationProviderSet
        - event: RiskProviderSet(indexed address,indexed address)
          handler: handleRiskProviderSet
        - event: RiskToleranceSet(indexed address,int8)
          handler: handleRiskToleranceSet
  - kind: ethereum/contract
    name: AssetGroupRegistry
    network: {{ network }}
    source:
      address: '{{ assetGroupRegistry }}'
      abi: AssetGroupRegistryContract
      startBlock: {{ startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/assetGroupRegistry.ts
      entities:
        - AssetGroup
        - AssetGroupToken
        - Token
      abis:
        - name: AssetGroupRegistryContract
          file: ./abis/AssetGroupRegistry.json
        - name: BTokenContract
          file: ./abis/BToken.json
        - name: BTokenBytesContract
          file: ./abis/BTokenBytes32.json
      eventHandlers:
        - event: AssetGroupRegistered(indexed uint256)
          handler: handleAssetGroupRegistered
  - kind: ethereum/contract
    name: SpoolAccessControl
    network: {{ network }}
    source:
      address: '{{ spoolAccessControl }}'
      abi: SpoolAccessControlContract
      startBlock: {{ startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/spoolAccessControl.ts
      entities:
        - RiskProvider
        - Strategy
        - StrategyRiskScore
      abis:
        - name: SpoolAccessControlContract
          file: ./abis/SpoolAccessControl.json
      eventHandlers:
        - event: RoleGranted(indexed bytes32,indexed address,indexed address)
          handler: handleRoleGranted
        - event: RoleRevoked(indexed bytes32,indexed address,indexed address)
          handler: handleRoleRevoked
  - kind: ethereum/contract
    name: SmartVaultFactory
    network: {{ network }}
    source:
      address: '{{ smartVaultFactory }}'
      abi: SmartVaultFactoryContract
      startBlock: {{ startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/smartVaultFactory.ts
      entities:
        - SmartVault
      abis:
        - name: SmartVaultFactoryContract
          file: ./abis/SmartVaultFactory.json
      eventHandlers:
        - event: SmartVaultDeployed(indexed address,indexed address)
          handler: handleSmartVaultDeployed
  - kind: ethereum/contract
    name: SmartVaultManager
    network: {{ network }}
    source:
      address: '{{ smartVaultManager }}'
      abi: SmartVaultManagerContract
      startBlock: {{ startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/smartVaultManager.ts
      entities:
        - SmartVault
        - AssetGroup
        - Strategy
        - RiskProvider
        - SmartVaultFees
        - SmartVaultStrategy
        - SmartVaultFlush
      abis:
        - name: SmartVaultManagerContract
          file: ./abis/SmartVaultManager.json
        - name: SmartVaultContract
          file: ./abis/SmartVault.json
      eventHandlers:
        - event: SmartVaultRegistered(indexed address,(uint256,address[],uint256,uint16,uint16,uint16))
          handler: handleSmartVaultRegistered
        - event: SmartVaultFlushed(indexed address,uint256)
          handler: handleSmartVaultFlushed
        - event: SmartVaultReallocated(indexed address,uint256)
          handler: handleSmartVaultReallocated
        - event: StrategyRemovedFromVaults(indexed address,address[])
          handler: handleStrategyRemovedFromVaults
  - kind: ethereum/contract
    name: DepositManager
    network: {{ network }}
    source:
      address: '{{ depositManager }}'
      abi: DepositManagerContract
      startBlock: {{ startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/depositManager.ts
      entities:
        - User
        - SmartVaultDepositNFT
        - SmartVaultFlush
      abis:
        - name: DepositManagerContract
          file: ./abis/DepositManager.json
      eventHandlers:
        - event: DepositInitiated(indexed address,indexed address,indexed uint256,uint256,uint256[],address,address)
          handler: handleDepositInitiated
        - event: SmartVaultTokensClaimed(indexed address,indexed address,uint256,uint256[],uint256[])
          handler: handleSmartVaultTokensClaimed
  - kind: ethereum/contract
    name: WithdrawalManager
    network: {{ network }}
    source:
      address: '{{ withdrawalManager }}'
      abi: WithdrawalManagerContract
      startBlock: {{ startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/withdrawalManager.ts
      entities:
        - User
        - SmartVaultWithdrawalNFT
        - SmartVaultFlush
      abis:
        - name: WithdrawalManagerContract
          file: ./abis/WithdrawalManager.json
      eventHandlers:
        - event: RedeemInitiated(indexed address,indexed address,indexed uint256,uint256,uint256,address)
          handler: handleRedeemInitiated
        - event: FastRedeemInitiated(indexed address,indexed address,uint256,uint256[],uint256[],uint256[])
          handler: handleFastRedeemInitiated
        - event: WithdrawalClaimed(indexed address,indexed address,uint256,uint256[],uint256[],uint256[])
          handler: handleWithdrawalClaimed
  - kind: ethereum/contract
    name: RewardManager
    network: {{ network }}
    source:
      address: '{{ rewardManager }}'
      abi: RewardManagerContract
      startBlock: {{ startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/rewardManager.ts
      entities:
        - SmartVaultRewardToken
        - SmartVaultRewardTokenUpdate
        - SmartVault
        - Token
        - UserSmartVault
        - UserSmartVaultRewardToken
        - UserSmartVaultRewardTokenCycle
      abis:
        - name: RewardManagerContract
          file: ./abis/RewardManager.json
        - name: BTokenContract
          file: ./abis/BToken.json
        - name: BTokenBytesContract
          file: ./abis/BTokenBytes32.json
      eventHandlers:
        - event: RewardAdded(indexed address,indexed address,uint256,uint256,uint256,uint256)
          handler: handleRewardAdded
        - event: RewardExtended(indexed address,indexed address,uint256,uint256,uint256,uint256,uint256)
          handler: handleRewardExtended
        - event: RewardRemoved(indexed address,indexed address)
          handler: handleRewardRemoved
        - event: RewardsClaimed(indexed address,indexed address,indexed address,uint256,uint256)
          handler: handleRewardsClaimed
  - kind: ethereum/contract
    name: GuardManager
    network: {{ network }}
    source:
      address: '{{ guardManager }}'
      abi: GuardManagerContract
      startBlock: {{ startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/guardManager.ts
      entities:
        - SmartVault
      abis:
        - name: GuardManagerContract
          file: ./abis/GuardManager.json
      eventHandlers:
        - event: GuardsInitialized(indexed address,(address,string,uint256,uint8[],bytes[],bytes2)[][],uint8[])
          handler: handleGuardsInitialized

templates:
  - name: SmartVault
    kind: ethereum/contract
    network: {{network}}
    source:
      abi: SmartVaultContract
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/smartVault.ts
      entities:
        - SmartVault
      abis:
        - name: SmartVaultContract
          file: ./abis/SmartVault.json
      eventHandlers:
        - event: TransferSingle(indexed address,indexed address,indexed address,uint256,uint256)
          handler: handleTransferSingle
        - event: TransferBatch(indexed address,indexed address,indexed address,uint256[],uint256[])
          handler: handleTransferBatch
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransfer
